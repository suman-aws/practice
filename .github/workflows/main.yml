name: Prepare new deployment

on:
  push:
    branches: [main]

jobs:
  prepare_deployment:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Run script and capture output
      run: |
        python3 prepare_new_deployment.py > output.txt
      id: get_output

    - name: Parse output and set output variables
      run: |
        env=$(awk -F'=' '{print $2}' output.txt | awk 'NR%7==1')
        context=$(awk -F'=' '{print $2}' output.txt | awk 'NR%7==2')
        model=$(awk -F'=' '{print $2}' output.txt | awk 'NR%7==3')
        version=$(awk -F'=' '{print $2}' output.txt | awk 'NR%7==4')
        sysuid=$(awk -F'=' '{print $2}' output.txt | awk 'NR%7==5')
        testingtime=$(awk -F'=' '{print $2}' output.txt | awk 'NR%7==6')
        echo "::set-output name=env::$env"
        echo "::set-output name=context::$context"
        echo "::set-output name=model::$model"
        echo "::set-output name=version::$version"
        echo "::set-output name=sysuid::$sysuid"
        echo "::set-output name=testingtime::$testingtime"
      shell: bash

    - name: Use parsed output
      run: |
        echo "Env: ${{ steps.get_output.outputs.env }}"
        echo "Deployment Context: ${{ steps.get_output.outputs.context }}"
        echo "Model Names: ${{ steps.get_output.outputs.model }}"
        echo "Model Versions: ${{ steps.get_output.outputs.version }}"
        echo "SystemUIDs: ${{ steps.get_output.outputs.sysuid }}"
        echo "TestingTime: ${{ steps.get_output.outputs.testingtime }}"
