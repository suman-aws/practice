
# This is a basic workflow to help you get started with Actions

name: models to deploy

# Controls when the workflow will run
on:


  # Triggers the workflow on push or pull request events but only for the main branch
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      environ:
        description: "Env of the deployment(Int,qa or prod) as suffix" 
        type: choice
        required: true
        options:
          - INT
          - QA
          - PROD
 

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

#       # Runs a set of commands using the runners shell
      - name: get
        id: step1
        run: |
          output=$(python new.py)
          OUTPUT="${output[@]}"
          readarray -t Models < <(echo "$OUTPUT")
          #echo "${Models}"
          model="${Models[0]}"
          envir="${Models[1]}"
          version="${Models[2]}"
          table="${Models[3]}"
          #echo "$OUTPUT"
          #model="${OUTPUT[0]}" 
          #envir="${OUTPUT[1]}"
          #version="${OUTPUT[2]}"
          #table="${OUTPUT[3]}"
          #echo "Model_Details:$model"
          #echo "Environment:$envir"
          
          #echo "Table_details:$table"
          echo "::set-model name=model_details::$model"
          #echo "::set-envir name=env_details::$envir"
          #echo "::set-table name=table_details::$table"
          #echo "::set-output name=enviro_details::$output"
          

        
      - name: Print model_details
        run: |
          #echo "${{ steps.step1.outputs.model_details }}"
          echo "${{ steps.step1.output.env_details }}"
          #echo "${{ steps.step1.outputs.tablenames_details }}"
   
          
         # mails=$(echo "${{ steps.step1.outputs.model_details }}" | tr "=" "\n")
          #for addr in $mails
          #do
          #echo "> [$addr]"
          #done

      - name: Performing  authentication
        shell: bash
        env:
          env: ${{github.event.inputs.environ}}
        run: |
           if [[ $env == *"INT"* ]]; then
             echo "INT models present"

           else
             echo "No INT models present"
           fi
           if [[ $env == *"QA"* ]]; then
             echo "No QA models present"
           else
             echo "No QA models present"
           fi
           if [[ $env == *"PROD"* ]]; then
             echo "PROD models present"
           else
             echo "No PROD models present"
           fi
      - name: Upload the model code to env
        shell: bash
        env:
          models: ${{github.event.outputs.model_details}}
        run: |        
         if [[ $models[i] == *"Apple"* ]]; then
           echo "models present"
         else
           echo "No models present"
         fi
