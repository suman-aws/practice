
# This is a basic workflow to help you get started with Actions

name: models to deploy

# Controls when the workflow will run
on:


  # Triggers the workflow on push or pull request events but only for the main branch
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      environ:
        description: "Env of the deployment(Int,qa or prod) as suffix" 
        type: choice
        required: true
        options:
          - INT
          - QA
          - PROD
 

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

#       # Runs a set of commands using the runners shell
      - name: get
        run: |
          output=$(python new.py)
          OUTPUT=(${output[@]})
          envir="${OUTPUT[0]}"
          model="${OUTPUT[1]}"
          table="${OUTPUT[2]}"
          echo "$envir"
          echo "::set-output name=envir_details::$envir"
          echo "::set-output name=model_details::$model"
          echo "::set-output name=tablenames_details::$table"
          echo "::set-output name=enviro_details::$output"
          

        id: step1
      - name: Print model_details
        run: |
          echo "${{ steps.step1.outputs.envir_details }}"
   
          
         # mails=$(echo "${{ steps.step1.outputs.model_details }}" | tr "=" "\n")
          #for addr in $mails
          #do
          #echo "> [$addr]"
          #done

      - name: Performing  authentication
        shell: bash
        env:
          env: ${{github.event.inputs.environ}}
        run: |
           if [[ $env == *"INT"* ]]; then
             echo "INT models present; Authenticating for  7"

           else
             echo "No INT models present; hence not authenticating for  7"
           fi
           if [[ $env == *"QA"* ]]; then
             echo "No QA models present; hence  authenticating for  5"
           else
             echo "No QA models present; hence not authenticating for  5"
           fi
           if [[ $env == *"PROD"* ]]; then
             echo "PROD models present; Authenticating for  5"
           else
             echo "No PROD models present; hence not authenticating for  5"
           fi
#       - name: Upload the model code to env
#         shell: bash
#         run: |        
#          if [[ $model[i] == *"Apple"* ]]; then
