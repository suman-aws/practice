name: Deploy to EKS

on:
  push:
    branches:
      - eks

env:
  ECR_REGISTRY:  201135917397.dkr.ecr.us-east-2.amazonaws.com/demo
  IMAGE_NAME: my-docker-image
  EKS_CLUSTER_NAME: eks-demo
  AWS_REGION: us-east-2

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Build and push Docker image
        id: build-image
        run: |
          docker build -t $ECR_REGISTRY/$IMAGE_NAME:$GITHUB_SHA .
          docker push $ECR_REGISTRY/$IMAGE_NAME:$GITHUB_SHA
          echo "::set-output name=image_tag::$GITHUB_SHA"
        env:
          ECR_REGISTRY: ${{ env.ECR_REGISTRY }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
          GITHUB_SHA: ${{ github.sha }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Deploy to EKS
        run: |
          aws eks update-kubeconfig --region $AWS_REGION --name $EKS_CLUSTER_NAME
          kubectl set image deployment/my-deployment my-container=$ECR_REGISTRY/$IMAGE_NAME:${{ steps.build-image.outputs.image_tag }}
          # Additional kubectl apply commands if needed
        env:
          AWS_REGION: ${{ env.AWS_REGION }}
          ECR_REGISTRY: ${{ env.ECR_REGISTRY }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
          EKS_CLUSTER_NAME: ${{ env.EKS_CLUSTER_NAME }}
