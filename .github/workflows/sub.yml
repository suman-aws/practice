name: Store Python Output as Github Environment Variables

on:
  push:
    branches:
      - main

jobs:
  store_output:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run Python script
        run: python prepare_new_deployment.py > output.txt

      - name: Read output file
        run: |
          env_str=$(cat output.txt)
          echo "Output string: $env_str"

      - name: Set environment variables
        run: |
          IFS=',' read -ra env_arr <<< "$env_str"
          export ENVironment=${env_arr[0]}
          export Envi=${env_arr[1]}
          export DEPLOYMENT_CONTEXT=${env_arr[2]}
          export MODEL_NAMES=${env_arr[3]}
          export MODEL_VERSIONS=${env_arr[4]}
          export SYSTEM_UIDS=${env_arr[5]}
          export TESTING_TIMES=${env_arr[6]}
          export host=${env_arr[7]}
          
      - name: Print environment variables
        run: |
          echo "ENVironment: $ENVironment"
          echo "Envi: $Envi"
          echo "DEPLOYMENT_CONTEXT: $DEPLOYMENT_CONTEXT"
          echo "MODEL_NAMES: $MODEL_NAMES"
          echo "MODEL_VERSIONS: $MODEL_VERSIONS"
          echo "SYSTEM_UIDS: $SYSTEM_UIDS"
          echo "TESTING_TIMES: $TESTING_TIMES"
          echo "host: $host"
      
    # - name: authunticate
    #   run: |
    #     output=$(python prepare_new_deployment.py)
    #     ENVironment=$(cut -d '=' -f1 <<< "$output")
    #     echo $ENVironment

    #     if [[ $ENVironment =~ "INT" ]]; then
    #       echo "INT models present; Authenticating for SI"
    #       # Add authentication steps for SI INT
    #     else
    #       echo "No INT models present; hence not authenticating for SI"
    #     fi

    #     if [[ $ENVironment =~ "QA" ]]; then
    #       echo "QA models present; Authenticating for SI"
    #       # Add authentication steps for SI QA
    #     else
    #       echo "No QA models present; hence not authenticating for SI"
    #     fi

    #     if [[ $ENVironment =~ "PROD" ]]; then
    #       echo "PROD models present; Authenticating for SI"
    #       # Add authentication steps for SI PROD
    #     else
    #       echo "No PROD models present; hence not authenticating for SI"
    #     fi

    # - name: Verify environment variables
    #   run: |
    #     output=$(python prepare_new_deployment.py)
    #     ENVironment=$(cut -d '=' -f1 <<< "$output")
    #     context=$(cut -d '=' -f2 <<< "$output")
    #     models=$(cut -d '=' -f3 <<< "$output")
    #     # echo $ENVironment
    #     # echo $context
    #     # echo $models
    #     python host.py "$ENVironment" "$context" "$models"


    # - name: Verify environment variables
    #   run: |
    #     # echo "ENVironment=$ENVironment"
    #     #echo "MODEL_NAMES=$MODEL_NAMES"
    #     #echo "MODEL_VERSIONS=$MODEL_VERSIONS"
    #     echo "DEPLOYMENT_CONTEXT=$DEPLOYMENT_CONTEXT"
    #     #echo "SYSTEM_UIDS=$SYSTEM_UIDS"
    #     #echo "TESTING_TIMES=$TESTING_TIMES"
    # - name: Run script
    #   run: |


    #     if [[ $ENVironment =~ "INT" ]]; then
    #       echo "INT models present; Authenticating for SI"
    #       # Add authentication steps for SI INT
    #     else
    #       echo "No INT models present; hence not authenticating for SI"
    #     fi

    #     if [[ $ENVironment =~ "QA" ]]; then
    #       echo "QA models present; Authenticating for SI"
    #       # Add authentication steps for SI QA
    #     else
    #       echo "No QA models present; hence not authenticating for SI"
    #     fi

    #     if [[ $ENVironment =~ "PROD" ]]; then
    #       echo "PROD models present; Authenticating for SI"
    #       # Add authentication steps for SI PROD
    #     else
    #       echo "No PROD models present; hence not authenticating for SI"
    #     fi
    #   env:
    #     ENVironment: ${{ env.ENVironment }}
    # - name: Deploy to environment
    #   env:
    #     ENVironment: ${{ env.ENVironment }}
    #   run: |
    #       for i in "${!ENVironment[@]}"; do
    #         parts=(${ENVironment[$i]// / })
    #         case "${parts[1]}" in
    #           INT)
    #             HOST="hsi7.com"
    #             ;;
    #           QA)
    #             HOST="3.com"
    #             ;;
    #           PROD)
    #             HOST="5.com"
    #             ;;
    #         esac
    #         echo "Deploying to ${parts[1]} environment on host ${HOST}"
    #         # Add your deployment commands here using $HOST
    #       done



