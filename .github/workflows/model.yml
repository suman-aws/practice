name: Parse Output

on: [push]

jobs:
  parse_output:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2


      - name: Example Step
        shell: bash
        run: |
          output=$(python prepare_new_deployment.py)
          # Parse output and set environment variables
          ENVIRONMENT=$(echo "$output" | grep -oP "(?<=ENVironment: ).*?(?=\])" | tr -d "[]" | sed "s/'//g" | sed "s/,/ /g")
          DEPLOYMENT_CONTEXT=$(echo "$output" | grep -oP "(?<=DEPLOYMENT_CONTEXT: ).*?(?=\])" | tr -d "[]" | sed "s/'//g" | sed "s/,/ /g")
          MODEL_NAMES=$(echo "$output" | grep -oP "(?<=MODEL_NAMES: ).*?(?=\])" | tr -d "[]" | sed "s/'//g" | sed "s/,/ /g")
          MODEL_VERSIONS=$(echo "$output" | grep -oP "(?<=MODEL_VERSIONS: ).*?(?=\])" | tr -d "[]" | sed "s/'//g" | sed "s/,/ /g")
          SYSTEM_UIDS=$(echo "$output" | grep -oP "(?<=SYSTEM_UIDS: ).*?(?=\])" | tr -d "[]" | sed "s/'//g" | sed "s/,/ /g")
          TESTING_TIMES=$(echo "$output" | grep -oP "(?<=TESTING_TIMES: ).*?(?=\])" | tr -d "[]" | sed "s/'//g" | sed "s/,/ /g")
          
          echo "ENVIRONMENT=$ENVIRONMENT" >> $GITHUB_ENV
          echo "DEPLOYMENT_CONTEXT=$DEPLOYMENT_CONTEXT" >> $GITHUB_ENV
          echo "MODEL_NAMES=$MODEL_NAMES" >> $GITHUB_ENV
          echo "MODEL_VERSIONS=$MODEL_VERSIONS" >> $GITHUB_ENV
          echo "SYSTEM_UIDS=$SYSTEM_UIDS" >> $GITHUB_ENV
          echo "TESTING_TIMES=$TESTING_TIMES" >> $GITHUB_ENV

      - name: Display Environment Variables
        run: |
          # echo "ENVIRONMENT=${{ env.ENVIRONMENT }}"
          MODEL_NAMES=($env.MODEL_NAMES)
          echo ${MODEL_NAMES[0]}
          echo "MODEL_VERSIONS=${{ env.MODEL_VERSIONS}}"

      - name: new models 
        run: |
          for env in "${ENVIRONMENT[@]}"
          do
              parts=($env)
              e=${parts[1]}

              case $e in
                  INT) 
                      host="hsi7..com"
                      ;;
                  QA)
                      host="hsi3..com"
                      ;;
                  PROD)
                      host="hsi5..com"
                      ;;
                  *)
                      echo "Invalid environment"
                      exit 1
                      ;;
              esac

              echo "Host for $env: $host"
          done
            echo "host=$host" >> $GITHUB_ENV
      - name: Display host details
        run: |
          echo "host=${{ env.host}}"
