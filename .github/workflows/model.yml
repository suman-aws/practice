name: Parse Output

on: [push]

jobs:
  parse_output:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2


      - name: Example Step
        shell: bash
        run: |
          output=$(python prepare_new_deployment.py)
          # Parse output and set environment variables
          ENVIRONMENT=$(echo "$output" | grep -oP "(?<=ENVironment: ).*?(?=\])" | tr -d "[]" | sed "s/'//g" | sed "s/,/ /g")
          DEPLOYMENT_CONTEXT=$(echo "$output" | grep -oP "(?<=DEPLOYMENT_CONTEXT: ).*?(?=\])" | tr -d "[]" | sed "s/'//g" | sed "s/,/ /g")
          MODEL_NAMES=$(echo "$output" | grep -oP "(?<=MODEL_NAMES: ).*?(?=\])" | tr -d "[]" | sed "s/'//g" | sed "s/,/ /g")
          MODEL_VERSIONS=$(echo "$output" | grep -oP "(?<=MODEL_VERSIONS: ).*?(?=\])" | tr -d "[]" | sed "s/'//g" | sed "s/,/ /g")
          SYSTEM_UIDS=$(echo "$output" | grep -oP "(?<=SYSTEM_UIDS: ).*?(?=\])" | tr -d "[]" | sed "s/'//g" | sed "s/,/ /g")
          TESTING_TIMES=$(echo "$output" | grep -oP "(?<=TESTING_TIMES: ).*?(?=\])" | tr -d "[]" | sed "s/'//g" | sed "s/,/ /g")
          
          echo "ENVIRONMENT=$ENVIRONMENT" >> $GITHUB_ENV
          echo "DEPLOYMENT_CONTEXT=$DEPLOYMENT_CONTEXT" >> $GITHUB_ENV
          echo "MODEL_NAMES=$MODEL_NAMES" >> $GITHUB_ENV
          echo "MODEL_VERSIONS=$MODEL_VERSIONS" >> $GITHUB_ENV
          echo "SYSTEM_UIDS=$SYSTEM_UIDS" >> $GITHUB_ENV
          echo "TESTING_TIMES=$TESTING_TIMES" >> $GITHUB_ENV
      - name: Display Environment Variables
        run: |
          # echo "ENVIRONMENT=${{ env.ENVIRONMENT }}"
          echo "TESTING_TIMES=${{ env.TESTING_TIMES}}"
          
      - name: new models 
        run: |
          for model in $MODEL_NAMES; do
               echo $model
                if [[ $model == T* ]]; then
                    bash test.sh $DEPLOYMENT_CONTEXT $MODEL_NAMES $MODEL_VERSIONS $SYSTEM_UIDS $TESTING_TIMES    
                fi
          done
      # - name: new models 
      #   run: |
      #              for model in $MODEL_NAMES; do
      #          echo $model
      #           if [[ $model == T* ]]; then
      #             # echo "--------------------------------Model: $model-----------------------------------------"
      #             bash test.sh $DEPLOYMENT_CONTEXT $MODEL_NAMES $MODEL_VERSIONS $SYSTEM_UIDS $TESTING_TIMES
      #           fi
      #     done
          